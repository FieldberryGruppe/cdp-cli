@charset "UTF-8";
.switcher-adjust {
  padding-bottom: 0.5em;
}

.gallery-example.ui-listview:not(.ui-listview-inset) {
  margin-top: 16px;
}

body {
  font-size: 16px;
  line-height: 1.875;
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Noto Sans Japanese", "ヒラギノ角ゴ ProN W3", Hiragino Kaku Gothic ProN, Arial, Meiryo, sans-serif;
  color: #666;
  overflow-y: auto !important;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

h1 {
  font-size: 40px;
}

h2 {
  font-size: 32px;
}

h3 {
  font-size: 28px;
}

h4 {
  font-size: 20px;
}

h5 {
  font-size: 16px;
}

h6 {
  font-size: 14px;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
  line-height: 1.1;
  color: crimson;
}

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small {
  font-size: 75%;
  font-weight: 400;
  line-height: 1;
  color: #666;
}

h1, h2 {
  font-weight: 600;
}

h1 {
  margin: 40px 0;
}

h2 {
  margin: 60px 0 20px;
}

h3, h4 {
  margin: 40px 0 18px;
}

h5, h6 {
  margin: 30px 0 15px;
}

p {
  margin: 16px 0;
  letter-spacing: .5px;
}

a[target="_blank"]::after {
  content: url(../res/images/parts/external-link.png);
  margin-left: 2px;
}

code:not(.hljs) {
  font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin: 0 .2em;
  font-size: 90%;
  background-color: rgba(27, 31, 35, 0.05);
  border-radius: 3px;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);
}

code:not(.hljs)::before, code:not(.hljs)::after {
  letter-spacing: -0.2em;
  content: "\00a0";
}

.page-content {
  position: relative;
  max-width: 1140px;
  padding-left: 10px;
  margin: 0 auto;
}

.ui-page:not(.ui-page-no-fix) {
  margin-top: 58px;
}

header.page-base-header {
  position: fixed;
  z-index: 1000;
  width: 100%;
  top: 0;
  height: 58px;
  line-height: 54px;
  background-color: crimson;
  color: white;
  font-size: 15px;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.5);
}

header.page-base-header .common-header-container {
  position: relative;
  max-width: 1140px;
  margin: 0 auto;
}

header.page-base-header .home-logo {
  position: absolute;
  left: 0;
}

header.page-base-header a {
  display: block;
  height: 54px;
  color: white;
  text-decoration: none;
}

header.page-base-header nav {
  position: absolute;
  right: 0;
}

header.page-base-header nav li {
  display: inline-block;
  min-width: 60px;
  padding: 0 10px;
  box-sizing: border-box;
}

header.page-base-header nav li:not(.active):hover {
  text-shadow: 0 0 4px white;
}

header.page-base-header nav li.active {
  font-weight: bold;
  border-bottom: solid 4px white;
}

.footer-inner {
  margin-top: 60px;
  border-top: 1px solid #cccccc;
}

.footer-copyright {
  padding: 10px 0;
  margin: 0 auto;
  font-size: 15px;
  text-align: center;
}

.main-content {
  position: absolute;
  width: calc(100% - 260px - 40px);
  left: 300px;
  margin-bottom: 60px;
}

.main-content ul {
  list-style-type: disc;
}

.main-content ol {
  list-style-type: decimal;
}

.main-content ul, .main-content ol {
  margin: 16px 0;
}

.main-content ul li, .main-content ol li {
  margin-left: 32px;
}

.main-content ul ul, .main-content ul ol, .main-content ol ul, .main-content ol ol {
  margin-top: 4px;
  margin-bottom: 8px;
}

.main-content ul ul, .main-content ol ul {
  list-style-type: circle;
}

.main-content a {
  color: #0074bf;
  text-decoration: none;
}

.main-content a:hover {
  text-decoration: underline;
}

.main-content a:visited {
  color: #65ace4;
}

.main-content .hint-container {
  background-color: #eeffff;
  border: solid 1px #ddd;
  padding: 10px 30px;
  margin: 30px 0;
  font-size: 95%;
}

.main-content .hint-container h1, .main-content .hint-container h2, .main-content .hint-container h3, .main-content .hint-container h4, .main-content .hint-container h5 {
  color: #666;
  margin-top: 0;
}

.main-content hr {
  margin: 20px 10px;
  border: solid 1px #aaa;
  border-bottom-width: 0;
}

.contents-list {
  position: fixed;
  width: 260px;
  height: calc(100vh - 58px);
  overflow-y: auto;
  font-size: 15px;
  line-height: 1.9;
}

.contents-list .menu-list-container {
  margin: 30px 0;
}

.contents-list .menu-list-2-item, .contents-list .menu-list-3-item {
  margin-left: 8px;
}

.contents-list .menu-list-1-item, .contents-list .menu-list-2-item, .contents-list .menu-list-3-item {
  position: relative;
  height: 100%;
  overflow-x: hidden;
}

.contents-list .menu-list-1-item a, .contents-list .menu-list-2-item a, .contents-list .menu-list-3-item a {
  display: block;
  width: calc(100% - 27px);
  text-decoration: none;
  color: #555;
}

.contents-list .menu-list-1-item a:hover, .contents-list .menu-list-2-item a:hover, .contents-list .menu-list-3-item a:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.contents-list .menu-list-1-item a.selected, .contents-list .menu-list-2-item a.selected, .contents-list .menu-list-3-item a.selected {
  color: crimson;
  text-shadow: 0 0 4px rgba(220, 20, 60, 0.5);
  pointer-events: none;
}

.contents-list .menu-list-1-item.expandable, .contents-list .menu-list-2-item.expandable, .contents-list .menu-list-3-item.expandable {
  transition: max-height .25s;
  max-height: 100vh;
  overflow-y: hidden;
}

.contents-list .menu-list-1-item.expandable > a, .contents-list .menu-list-2-item.expandable > a, .contents-list .menu-list-3-item.expandable > a {
  pointer-events: none;
  font-weight: bold;
  color: #333;
}

.contents-list .menu-list-1-item.expandable::after, .contents-list .menu-list-2-item.expandable::after, .contents-list .menu-list-3-item.expandable::after {
  content: "";
  width: 27px;
  height: 27px;
  position: absolute;
  top: 0;
  right: 0;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  background-image: url("../res/images/parts/iconmonstr-arrow-65-32.png");
  transform: rotate(180deg);
  transition: .25s;
}

.contents-list .menu-list-1-item.expandable.collapsed, .contents-list .menu-list-2-item.expandable.collapsed, .contents-list .menu-list-3-item.expandable.collapsed {
  max-height: 28.5px;
}

.contents-list .menu-list-1-item.expandable.collapsed::after, .contents-list .menu-list-2-item.expandable.collapsed::after, .contents-list .menu-list-3-item.expandable.collapsed::after {
  transform: rotate(0);
}

.contents-list .menu-list-1-item.caption, .contents-list .menu-list-2-item.caption, .contents-list .menu-list-3-item.caption {
  margin-top: 20px;
  margin-bottom: 2px;
}

.contents-list .menu-list-1-item.caption:first-child, .contents-list .menu-list-2-item.caption:first-child, .contents-list .menu-list-3-item.caption:first-child {
  margin-top: 0;
}

.contents-list .menu-list-1-item.caption a, .contents-list .menu-list-2-item.caption a, .contents-list .menu-list-3-item.caption a {
  color: #56a764;
  font-size: 16px;
  font-weight: bold;
  cursor: none;
  pointer-events: none;
}

.contents-list .menu-list-1-item.caption a:hover, .contents-list .menu-list-2-item.caption a:hover, .contents-list .menu-list-3-item.caption a:hover {
  background-color: transparent;
}

table {
  width: 100%;
  max-width: 100%;
  margin: 20px 0;
  background-color: transparent;
  border-spacing: 0;
  border-collapse: collapse;
}

th, td {
  text-align: left;
  padding: 8px;
  line-height: 1.5;
  vertical-align: top;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

th {
  font-weight: bold;
  border-top: 2px solid rgba(0, 0, 0, 0.1);
  background-color: rgba(220, 20, 60, 0.05);
  min-width: 200px;
}

tr:hover {
  background-color: rgba(0, 0, 0, 0.02);
}

pre {
  font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
}

pre:not(.hljspre) {
  display: block;
  overflow: auto;
  padding: 10px;
  margin: 4px 0 14px;
  background-color: rgba(0, 0, 0, 0.05);
  border: 1px dotted rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  word-break: break-all;
  word-wrap: break-word;
}

@media screen and (max-width: 800px) {
  header.page-base-header {
    font-size: 14px;
  }
  header.page-base-header nav li {
    display: inline-block;
    min-width: 50px;
    padding: 0 6px;
    min-width: 40px;
  }
  .contents-list {
    width: 180px;
    font-size: 13px;
  }
  .contents-list .menu-list-1-item.expandable::after, .contents-list .menu-list-2-item.expandable::after, .contents-list .menu-list-3-item.expandable::after {
    width: 23px;
    height: 23px;
  }
  .contents-list .menu-list-1-item.caption a, .contents-list .menu-list-2-item.caption a, .contents-list .menu-list-3-item.caption a {
    font-size: 14px;
  }
  .main-content {
    width: calc(100% - 180px - 24px);
    left: 204px;
  }
}

.demo-container.iphone7-portrait {
  width: 500px;
  height: 925px;
}

.demo-container.iphone7-portrait.zoom-out {
  width: 450px;
  height: 832.5px;
}

.demo-container.iphone7-portrait .demo-area {
  width: 500px;
  height: 925px;
  background-image: url("../res/images/www.pakutaso.com/--www.pakutaso.com-shared-img-thumb-_RTM0860.jpg");
}

.demo-container.iphone7-portrait .demo-area iframe {
  width: 378px;
  height: 670px;
  left: 63px;
  top: 124px;
}

.demo-container .demo-area {
  position: relative;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
}

.demo-container .demo-area iframe {
  position: absolute;
}

.demo-container.zoom-out .demo-area {
  transform: scale(0.9);
  transform-origin: left top;
}

#page-top .page-content {
  width: 100%;
  max-width: none;
  padding-left: 0;
}

#page-top .section {
  width: 100%;
  min-height: 480px;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

#page-top .section .content {
  max-width: 900px;
  margin: 0 auto;
  padding-top: 100px;
}

#page-top .section .content p {
  font-size: 17px;
}

#page-top .section .content .image-area {
  text-align: center;
}

#page-top .section .content .text-image-container {
  margin: 40px 0 80px;
}

#page-top .section .content .text-image-container:last-child {
  margin-bottom: 0;
}

#page-top .section .content .text-image-container .inline-image-area, #page-top .section .content .text-image-container .inline-text-area {
  display: inline-block;
  vertical-align: top;
  box-sizing: border-box;
}

#page-top .section .content .text-image-container .inline-image-area {
  width: 320px;
}

#page-top .section .content .text-image-container .inline-image-area img {
  width: 100%;
}

#page-top .section .content .text-image-container .inline-text-area {
  width: calc(100% - 320px);
  padding-right: 20px;
}

#page-top .section .content .text-image-container .inline-text-area h2 {
  margin-top: 0;
}

#page-top .section .content .text-image-container .inline-image-area + .inline-text-area {
  padding-left: 20px;
  padding-right: 0;
}

#page-top .section h1 {
  margin-top: 0;
}

#page-top .section ul {
  list-style-type: disc;
}

#page-top .section ol {
  list-style-type: decimal;
}

#page-top .section ul, #page-top .section ol {
  margin: 16px 0;
}

#page-top .section ul li, #page-top .section ol li {
  margin-left: 32px;
}

#page-top .section ul ul, #page-top .section ul ol, #page-top .section ol ul, #page-top .section ol ol {
  margin-top: 4px;
  margin-bottom: 8px;
}

#page-top .section ul ul, #page-top .section ol ul {
  list-style-type: circle;
}

#page-top .section.reverse-color {
  color: white;
}

#page-top .section.reverse-color h1, #page-top .section.reverse-color h2, #page-top .section.reverse-color h3, #page-top .section.reverse-color h4, #page-top .section.reverse-color h5 {
  color: white;
}

#page-top #top-section {
  background-color: #444;
  background-image: url("../res/images/www.pakutaso.com/--www.pakutaso.com-shared-img-thumb-ipadIMGL1200.jpg");
}

#page-top #top-section .content {
  max-width: 1140px;
}

#page-top #top-section .slogan {
  margin: 0;
  font-size: 36px;
  color: white;
  text-shadow: 0 0 10px black;
  font-weight: bold;
}

#page-top #top-section .description {
  padding-top: 10px;
  font-size: 24px;
  color: white;
}

#page-top #top-section .start-button {
  display: inline-block;
  font-size: 28px;
  padding: 10px 40px;
  margin-top: 40px;
  border-style: solid;
  border-width: 2px;
  border-color: #a66 #822 #822 #a66;
  background: linear-gradient(to bottom, #922, crimson);
  border-radius: 4px;
  background-color: #9400d3;
  color: white;
  text-decoration: none;
}

#page-top #top-section .start-button:hover {
  background: linear-gradient(to bottom, #b33, #d24);
  box-shadow: 0 0 32px rgba(255, 255, 255, 0.5);
}

#page-top #cdp-composed-of-section {
  background-color: darkgreen;
}

#page-top #cdp-activity-section {
  background-color: #ddd;
}

#page-top #customers-section .customer {
  display: inline-block;
  width: 240px;
  margin: 10px;
}

#page-top #customers-section .customer .name {
  display: inline-block;
  font-size: 16px;
  color: deepskyblue;
  text-align: center;
}

#page-top #customers-section .customer .image {
  width: 100%;
  padding-bottom: 100%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

#page-top #customers-section .customer .platforms {
  display: inline-block;
  margin-left: 10px;
}

#page-top #customers-section .customer .platforms .android-icon, #page-top #customers-section .customer .platforms .ios-icon, #page-top #customers-section .customer .platforms .windows-icon, #page-top #customers-section .customer .platforms .mac-icon {
  display: inline-block;
  width: 16px;
  height: 16px;
  margin: 0 1px;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

#page-top #customers-section .customer .platforms .android-icon {
  background-image: url("../res/images/parts/android.png");
}

#page-top #customers-section .customer .platforms .ios-icon {
  background-image: url("../res/images/parts/ios.png");
}

#page-top #customers-section .customer .platforms .windows-icon {
  background-image: url("../res/images/parts/windows.png");
}

#page-top #customers-section .customer .platforms .mac-icon {
  background-image: url("../res/images/parts/osx.png");
}

#page-top #customers-section .customer#huis-ui-creator .image {
  background-image: url("../res/images/huis-ui-creator.png");
}

#page-top #customers-section .customer#fes-closet .image {
  background-image: url("../res/images/fes-closet.png");
}

#page-top #customers-section .customer#digital-paper .image {
  background-image: url("../res/images/digital-paper.png");
}

#page-top #customers-section .customer#sonet-pointapp .image {
  background-image: url("../res/images/sonet-pointapp.png");
}
/*# sourceMappingURL=data:application/json;base64, */