{"version":3,"sources":["dist/cdp-cli.js"],"names":["module","exports","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","require","value","path","inquirer","cdp_lib_1","fs","Utils","chalk","_","PromptBase","[object Object]","this","_answers","_locale","cmdInfo","_cmdInfo","Promise","resolve","reject","showPrologue","inquireLanguage","then","inquire","settings","catch","reason","message","GREETING","cyan","yellow","red","console","log","lang","answers","prologueComment","gray","say","update","merge","prompt","questions","config","itemName","color","item","error","process","exit","prop","props","bool","label","locale","JSON","parse","readFileSync","join","pkgDir","toString","Error","question","type","choices","default","answer","loadLanguage","language","displaySettingsByAnswers","common","confirm","confirmation","action","minify","cliOptions","force","verbose","silent","targetDir","proc","inquireSettings","updateAnswers","confirmSettings","reflectCommandInfo","setTimeout","libraryOnBrowser","projectType","es","env","tools","libraryOnNode","libraryOnElectron","mobileOnBrowser","platforms","projectStructure","external","hogan.js","acquisition","regular","alias","hammerjs","globalExport","fileName","subset","jquery-hammerjs","venderName","@types/hammerjs","cordova-plugin-cdp-nativebridge","cordova-plugin-inappbrowser","@types/cordova-plugin-inappbrowser","cordova-plugin-app-version","@types/cordova-plugin-app-version","iscroll","@types/iscroll","flipsnap","@types/flipsnap","desktopOnBrowser","desktopOnElectron","webOnBrowser","library","browser","node","electron","ELECTRON_AVAILABLE","mobile","desctop","web","command_parser_1","prompt_library_1","prompt_mobile_1","prompt_desktop_1","prompt_web_1","getInquirer","target","PromptLibrary","PromptMobileApp","PromptDesktopApp","PromptWebApp","main","title","CommandParser","argv","prompting","execute","green","finished","stringify","commander","options","cmdline","getPackageDirectory","pkg","version","option","command","description","on","test","underline","showHelp","noHelp","cmd","length","toCommandLineOptions","execDir","dirname","targetdir","inform","text","outputHelp","prompt_base_1","default_config_1","$","semverRegex","libConfig","projectName","validate","invalidMessage","filter","exec","license","apache2","mit","proprietary","Separator","LIMITATION","electronRenderer","extraSettings","recommended","custom","none","commonjs","umd","when","amd","es5","es2015","extend","items","recommend","forEach","undefined","config2description","stilNotAvailable","mobileConfig","EXTERNAL_DEFAULTS","defaults","keys","push","platforms_default","slice","projectStructure_default","external_default","appName","trim","dasherize","toLowerCase","appId","checked","indexOf","lib","porting","paginated","separator","cordova","disabled","noCordovaMessage","utils","lookup","_config","dependencies","devDependencies","cordova_plugin","resource_addon","resolveDependencies","moduleName","info","top","valid","sub","fixed","platformInfo","COLOR","cordovaPlugins"],"mappings":"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","sourcesContent":["﻿/*!\n * cdp-cli.js 0.0.2\n *\n * Date: 2017-09-28T10:47:01.203Z\n */\n\nmodule.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/     // The module cache\n/******/     var installedModules = {};\n/******/\n/******/     // The require function\n/******/     function __webpack_require__(moduleId) {\n/******/\n/******/         // Check if module is in cache\n/******/         if(installedModules[moduleId]) {\n/******/             return installedModules[moduleId].exports;\n/******/         }\n/******/         // Create a new module (and put it into the cache)\n/******/         var module = installedModules[moduleId] = {\n/******/             i: moduleId,\n/******/             l: false,\n/******/             exports: {}\n/******/         };\n/******/\n/******/         // Execute the module function\n/******/         modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/         // Flag the module as loaded\n/******/         module.l = true;\n/******/\n/******/         // Return the exports of the module\n/******/         return module.exports;\n/******/     }\n/******/\n/******/\n/******/     // expose the modules object (__webpack_modules__)\n/******/     __webpack_require__.m = modules;\n/******/\n/******/     // expose the module cache\n/******/     __webpack_require__.c = installedModules;\n/******/\n/******/     // define getter function for harmony exports\n/******/     __webpack_require__.d = function(exports, name, getter) {\n/******/         if(!__webpack_require__.o(exports, name)) {\n/******/             Object.defineProperty(exports, name, {\n/******/                 configurable: false,\n/******/                 enumerable: true,\n/******/                 get: getter\n/******/             });\n/******/         }\n/******/     };\n/******/\n/******/     // getDefaultExport function for compatibility with non-harmony modules\n/******/     __webpack_require__.n = function(module) {\n/******/         var getter = module && module.__esModule ?\n/******/             function getDefault() { return module['default']; } :\n/******/             function getModuleExports() { return module; };\n/******/         __webpack_require__.d(getter, 'a', getter);\n/******/         return getter;\n/******/     };\n/******/\n/******/     // Object.prototype.hasOwnProperty.call\n/******/     __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/     // __webpack_public_path__\n/******/     __webpack_require__.p = \"\";\n/******/\n/******/     // Load entry module and return exports\n/******/     return __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"cdp-lib\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = __webpack_require__(3);\nconst inquirer = __webpack_require__(2);\nconst cdp_lib_1 = __webpack_require__(0);\nconst fs = cdp_lib_1.Utils.fs;\nconst chalk = cdp_lib_1.Utils.chalk;\nconst _ = cdp_lib_1.Utils._;\n//___________________________________________________________________________________________________________________//\n/**\n * @class PromptBase\n * @brief Prompt のベースクラス\n */\nclass PromptBase {\n    constructor() {\n        this._answers = {};\n        this._locale = {};\n    }\n    ///////////////////////////////////////////////////////////////////////\n    // public methods\n    /**\n     * エントリ\n     */\n    prompting(cmdInfo) {\n        this._cmdInfo = cmdInfo;\n        return new Promise((resolve, reject) => {\n            this.showPrologue();\n            this.inquireLanguage()\n                .then(() => {\n                return this.inquire();\n            })\n                .then((settings) => {\n                resolve(settings);\n            })\n                .catch((reason) => {\n                reject(reason);\n            });\n        });\n    }\n    /**\n     * Like cowsay\n     * https://en.wikipedia.org/wiki/Cowsay\n     */\n    say(message) {\n        const GREETING = \"\\n  ≡     \" + chalk.cyan(\"∧＿∧\") + \"    ／￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣\" +\n            \"\\n    ≡ \" + chalk.cyan(\"（ ´∀｀）\") + \"＜  \" + chalk.yellow(message) +\n            \"\\n  ≡   \" + chalk.cyan(\"（  つ\") + \"＝\" + chalk.cyan(\"つ\") + \"  ＼＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿\" +\n            \"\\n    ≡  \" + chalk.cyan(\"｜ ｜ |\") + \"＼\" +\n            \"\\n    ≡ \" + chalk.cyan(\"（_＿）＿）\") + \"＼\" +\n            \"\\n  ≡   \" + chalk.red(\"◎\") + \"￣￣￣￣\" + chalk.red(\"◎\");\n        console.log(GREETING);\n    }\n    /**\n     * ローカライズリソースにアクセス\n     * ex) this.lang.prompt.projectName.message\n     *\n     * @return {Object} リソースオブジェクト\n     */\n    get lang() {\n        return this._locale;\n    }\n    ///////////////////////////////////////////////////////////////////////\n    // protected methods\n    /**\n     * 設定値にアクセス\n     *\n     * @return {Object} Answer オブジェクト\n     */\n    get answers() {\n        return this._answers;\n    }\n    /**\n     * Prologue コメントの設定\n     */\n    get prologueComment() {\n        return \"Welcome to CDP Boilerplate Generator!\";\n    }\n    /**\n     * Welcome 表示\n     */\n    showPrologue() {\n        console.log(\"\\n\" + chalk.gray(\"================================================================\"));\n        this.say(this.prologueComment);\n        console.log(\"\\n\" + chalk.gray(\"================================================================\") + \"\\n\");\n    }\n    /**\n     * Answer オブジェクト の更新\n     *\n     * @return {Object} Answer オブジェクト\n     */\n    updateAnswers(update) {\n        return _.merge(this._answers, update);\n    }\n    /**\n     * プロジェクト設定\n     * 分岐が必要な場合はオーバーライドすること\n     */\n    inquireSettings() {\n        return new Promise((resolve, reject) => {\n            inquirer.prompt(this.questions)\n                .then((answers) => {\n                resolve(answers);\n            })\n                .catch((reason) => {\n                reject(reason);\n            });\n        });\n    }\n    /**\n     * setting から 設定説明の作成\n     *\n     * @param  {Object} config 設定\n     * @param  {String} itemName 設定項目名\n     * @return {String} 説明文\n     */\n    config2description(config, itemName, color = \"cyan\") {\n        const item = this.lang.settings[itemName];\n        if (null == item) {\n            console.error(chalk.red(\"error. item not found. item name: \" + itemName));\n            process.exit(1);\n        }\n        const prop = (() => {\n            if (item.props) {\n                return item.props[config[itemName]];\n            }\n            else if (\"boolean\" === typeof config[itemName]) {\n                return item.bool[config[itemName] ? \"yes\" : \"no\"];\n            }\n            else {\n                return config[itemName];\n            }\n        })();\n        return item.label + chalk[color](prop);\n    }\n    ///////////////////////////////////////////////////////////////////////\n    // private methods\n    /**\n     * ローカライズリソースのロード\n     */\n    loadLanguage(locale) {\n        try {\n            this._locale = JSON.parse(fs.readFileSync(path.join(this._cmdInfo.pkgDir, \"res/locales/messages.\" + locale + \".json\"), \"utf8\").toString());\n        }\n        catch (error) {\n            throw Error(\"Language resource JSON parse error: \" + error.message);\n        }\n    }\n    /**\n     * 言語選択\n     */\n    inquireLanguage() {\n        return new Promise((resolve, reject) => {\n            const question = [\n                {\n                    type: \"list\",\n                    name: \"language\",\n                    message: \"Please choose your preferred language.\",\n                    choices: [\n                        {\n                            name: \"English/英語\",\n                            value: \"en-US\",\n                        },\n                        {\n                            name: \"Japanese/日本語\",\n                            value: \"ja-JP\",\n                        }\n                    ],\n                    default: 0,\n                }\n            ];\n            inquirer.prompt(question)\n                .then((answer) => {\n                this.loadLanguage(answer.language);\n                resolve();\n            })\n                .catch((reason) => {\n                reject(reason);\n            });\n        });\n    }\n    /**\n     * 設定確認\n     */\n    confirmSettings() {\n        return new Promise((resolve, reject) => {\n            console.log(\"\\n\" + chalk.gray(\"================================================================\") + \"\\n\");\n            const settings = this.displaySettingsByAnswers(this._answers);\n            console.log(\"\\n\" + chalk.gray(\"================================================================\") + \"\\n\");\n            console.log(\"check: \" + this.lang.prompt.common.confirm.message);\n            const question = [\n                {\n                    type: \"confirm\",\n                    name: \"confirmation\",\n                    message: this.lang.prompt.common.confirm.message,\n                    default: true,\n                }\n            ];\n            inquirer.prompt(question)\n                .then((answer) => {\n                if (answer.confirmation) {\n                    resolve(settings);\n                }\n                else {\n                    reject();\n                }\n            })\n                .catch((reason) => {\n                reject(reason);\n            });\n        });\n    }\n    /**\n     * command line 情報を Conficuration に反映\n     *\n     * @param  {IProjectConfiguration} config 設定\n     * @return {IProjectConfiguration} command line を反映させた config 設定\n     */\n    reflectCommandInfo(config) {\n        config.action = this._cmdInfo.action;\n        config.minify = this._cmdInfo.cliOptions.minify;\n        config.settings = {\n            force: this._cmdInfo.cliOptions.force,\n            verbose: this._cmdInfo.cliOptions.verbose,\n            silent: this._cmdInfo.cliOptions.silent,\n            targetDir: this._cmdInfo.cliOptions.targetDir,\n            lang: this.lang.type,\n        };\n        return config;\n    }\n    /**\n     * 設定インタラクション\n     */\n    inquire() {\n        return new Promise((resolve, reject) => {\n            const proc = () => {\n                this.inquireSettings()\n                    .then((answers) => {\n                    this.updateAnswers(answers);\n                    this.confirmSettings()\n                        .then((config) => {\n                        resolve(this.reflectCommandInfo(config));\n                    })\n                        .catch(() => {\n                        setTimeout(proc);\n                    });\n                })\n                    .catch((reason) => {\n                    reject(reason);\n                });\n            };\n            setTimeout(proc);\n        });\n    }\n}\nexports.PromptBase = PromptBase;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"inquirer\");\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"path\");\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * ブラウザ環境で動作するライブラリの既定値\n */\nconst libraryOnBrowser = {\n    // IProjectConfigration\n    projectType: \"library\",\n    // IBuildTargetConfigration\n    es: \"es5\",\n    module: \"umd\",\n    env: \"web\",\n    tools: [\"webpack\", \"nyc\"],\n};\n/**\n * Node.js 環境で動作するライブラリの既定値\n */\nconst libraryOnNode = {\n    // IProjectConfigration\n    projectType: \"library\",\n    // IBuildTargetConfigration\n    es: \"es2015\",\n    module: \"commonjs\",\n    env: \"node\",\n    tools: [\"webpack\", \"nyc\"],\n};\n/**\n * electron 環境で動作するライブラリの既定値\n */\nconst libraryOnElectron = {\n    // IProjectConfigration\n    projectType: \"library\",\n    // IBuildTargetConfigration\n    es: \"es2015\",\n    module: \"commonjs\",\n    env: \"electron\",\n    tools: [\"webpack\", \"nyc\"],\n};\n/**\n * ブラウザ(cordova)環境で動作するモバイルアプリケーションの既定値\n */\nconst mobileOnBrowser = {\n    // IProjectConfigration\n    projectType: \"mobile\",\n    // IBuildTargetConfigration\n    es: \"es5\",\n    module: \"amd\",\n    env: \"web\",\n    tools: [\"nyc\"],\n    // IMobileAppConfigration\n    platforms: [\"android\", \"ios\"],\n    projectStructure: [],\n    external: {\n        \"hogan.js\": {\n            acquisition: \"npm\",\n            regular: true,\n            alias: \"hogan\",\n        },\n        \"hammerjs\": {\n            acquisition: \"npm\",\n            regular: true,\n            globalExport: \"Hammer\",\n            fileName: \"hammer\",\n            subset: {\n                \"jquery-hammerjs\": {\n                    acquisition: \"npm\",\n                    venderName: \"hammerjs\",\n                    fileName: \"jquery.hammer\",\n                    regular: true,\n                },\n                \"@types/hammerjs\": {\n                    acquisition: \"npm:dev\",\n                    regular: true,\n                },\n            },\n        },\n        \"cordova-plugin-cdp-nativebridge\": {\n            acquisition: \"cordova\",\n            regular: true,\n        },\n        \"cordova-plugin-inappbrowser\": {\n            acquisition: \"cordova\",\n            regular: false,\n            subset: {\n                \"@types/cordova-plugin-inappbrowser\": {\n                    acquisition: \"npm:dev\",\n                    default: true,\n                },\n            },\n        },\n        \"cordova-plugin-app-version\": {\n            acquisition: \"cordova\",\n            regular: false,\n            subset: {\n                \"@types/cordova-plugin-app-version\": {\n                    acquisition: \"npm:dev\",\n                    regular: true,\n                },\n            },\n        },\n        \"iscroll\": {\n            acquisition: \"npm\",\n            regular: false,\n            globalExport: \"IScroll\",\n            fileName: \"iscroll-probe\",\n            subset: {\n                \"@types/iscroll\": {\n                    acquisition: \"npm:dev\",\n                    regular: true,\n                },\n            },\n        },\n        \"flipsnap\": {\n            acquisition: \"npm\",\n            regular: false,\n            globalExport: \"Flipsnap\",\n            subset: {\n                \"@types/flipsnap\": {\n                    acquisition: \"npm:dev\",\n                    regular: true,\n                },\n            },\n        },\n    },\n};\n/**\n * ブラウザ環境で動作するデスクトップアプリケーションの既定値\n */\nconst desktopOnBrowser = {\n    // IProjectConfigration\n    projectType: \"desktop\",\n    // IBuildTargetConfigration\n    es: \"es5\",\n    module: \"amd\",\n    env: \"web\",\n    tools: [\"nyc\"],\n};\n/**\n *  electron 環境で動作するデスクトップアプリケーションの既定値\n */\nconst desktopOnElectron = {\n    // IProjectConfigration\n    projectType: \"desktop\",\n    // IBuildTargetConfigration\n    es: \"es2015\",\n    module: \"commonjs\",\n    env: \"electron-renderer\",\n    tools: [\"webpack\", \"nyc\"],\n};\n/**\n * ブラウザ環境で動作するウェブアプリケーションの既定値\n */\nconst webOnBrowser = {\n    // IProjectConfigration\n    projectType: \"web\",\n    // IBuildTargetConfigration\n    es: \"es5\",\n    module: \"amd\",\n    env: \"web\",\n};\n//___________________________________________________________________________________________________________________//\nexports.default = {\n    library: {\n        browser: libraryOnBrowser,\n        node: libraryOnNode,\n        electron: libraryOnElectron,\n        ELECTRON_AVAILABLE: false,\n    },\n    mobile: {\n        browser: mobileOnBrowser,\n    },\n    desctop: {\n        browser: desktopOnBrowser,\n        electron: desktopOnElectron,\n    },\n    web: {\n        browser: webOnBrowser,\n    },\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(6);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cdp_lib_1 = __webpack_require__(0);\nconst command_parser_1 = __webpack_require__(7);\nconst prompt_library_1 = __webpack_require__(9);\nconst prompt_mobile_1 = __webpack_require__(10);\nconst prompt_desktop_1 = __webpack_require__(11);\nconst prompt_web_1 = __webpack_require__(12);\nconst chalk = cdp_lib_1.Utils.chalk;\nfunction getInquirer(cmdInfo) {\n    switch (cmdInfo.action) {\n        case \"create\":\n            break;\n        default:\n            console.error(chalk.red(cmdInfo.action + \" command: under construction.\"));\n            process.exit(1);\n    }\n    switch (cmdInfo.target) {\n        case \"library\":\n            return new prompt_library_1.PromptLibrary();\n        case \"mobile\":\n            return new prompt_mobile_1.PromptMobileApp();\n        case \"desktop\":\n            return new prompt_desktop_1.PromptDesktopApp();\n        case \"web\":\n            return new prompt_web_1.PromptWebApp();\n        default:\n            console.error(chalk.red(\"unsupported target: \" + cmdInfo.target));\n            process.exit(1);\n    }\n}\nfunction main() {\n    process.title = \"cdp\";\n    const cmdInfo = command_parser_1.CommandParser.parse(process.argv);\n    const inquirer = getInquirer(cmdInfo);\n    inquirer.prompting(cmdInfo)\n        .then((config) => {\n        // execute\n        return cdp_lib_1.default.execute(config);\n    })\n        .then(() => {\n        console.log(chalk.green(inquirer.lang.finished[cmdInfo.action]));\n    })\n        .catch((reason) => {\n        if (\"string\" !== typeof reason) {\n            if (null != reason.message) {\n                reason = reason.message;\n            }\n            else {\n                reason = JSON.stringify(reason);\n            }\n        }\n        console.error(chalk.red(reason));\n    })\n        .then(() => {\n        // NOTE: es6 promise's always block.\n    });\n}\nexports.main = main;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = __webpack_require__(3);\nconst commander = __webpack_require__(8);\nconst cdp_lib_1 = __webpack_require__(0);\nconst fs = cdp_lib_1.Utils.fs;\nconst chalk = cdp_lib_1.Utils.chalk;\n//___________________________________________________________________________________________________________________//\n/**\n * @class CommandParser\n * @brief コマンドラインパーサー\n */\nclass CommandParser {\n    ///////////////////////////////////////////////////////////////////////\n    // public static methods\n    /**\n     * コマンドラインのパース\n     *\n     * @param  {String} argv       引数を指定\n     * @param  {Object} [options]  オプションを指定\n     * @returns {ICommandLineInfo}\n     */\n    static parse(argv, options) {\n        const cmdline = {\n            pkgDir: this.getPackageDirectory(argv),\n        };\n        let pkg;\n        try {\n            pkg = JSON.parse(fs.readFileSync(path.join(cmdline.pkgDir, \"package.json\"), \"utf8\").toString());\n        }\n        catch (error) {\n            throw Error(\"package.json parse error: \" + error.message);\n        }\n        commander\n            .version(pkg.version)\n            .option(\"-f, --force\", \"Continue execution even if in error situation\")\n            .option(\"-t, --targetdir <path>\", \"Specify project target directory\")\n            .option(\"-c, --config <path>\", \"Specify config file path\")\n            .option(\"-v, --verbose\", \"Show debug messages.\")\n            .option(\"-s, --silent\", \"Run as silent mode.\")\n            .option(\"--no-minify\", \"Not minified on release.\");\n        commander\n            .command(\"init\")\n            .description(\"init project\")\n            .action(() => {\n            cmdline.action = \"init\";\n        })\n            .on(\"--help\", () => {\n            console.log(chalk.green(\"  Examples:\"));\n            console.log(\"\");\n            console.log(chalk.green(\"    $ cdp init\"));\n            console.log(\"\");\n        });\n        commander\n            .command(\"create <target>\")\n            .description(\"create boilerplate for 'library, module' | 'mobile, app' | 'desktop' | 'web'\")\n            .action((target) => {\n            if (/^(module|app|library|mobile|desktop|web)$/i.test(target)) {\n                cmdline.action = \"create\";\n                cmdline.target = target;\n                if (\"module\" === cmdline.target) {\n                    cmdline.target = \"library\";\n                }\n                else if (\"app\" === cmdline.target) {\n                    cmdline.target = \"mobile\";\n                }\n            }\n            else {\n                console.log(chalk.red.underline(\"  unsupported target: \" + target));\n                this.showHelp();\n            }\n        })\n            .on(\"--help\", () => {\n            console.log(chalk.green(\"  Examples:\"));\n            console.log(\"\");\n            console.log(chalk.green(\"    $ cdp create library\"));\n            console.log(chalk.green(\"    $ cdp create mobile\"));\n            console.log(chalk.green(\"    $ cdp create app -c setting.json\"));\n            console.log(\"\");\n        });\n        commander\n            .command(\"*\", null, { noHelp: true })\n            .action((cmd) => {\n            console.log(chalk.red.underline(\"  unsupported command: \" + cmd));\n            this.showHelp();\n        });\n        commander.parse(argv);\n        if (argv.length <= 2) {\n            this.showHelp();\n        }\n        cmdline.cliOptions = this.toCommandLineOptions(commander);\n        return cmdline;\n    }\n    ///////////////////////////////////////////////////////////////////////\n    // private static methods\n    /**\n     * CLI のインストールディレクトリを取得\n     *\n     * @param  {String[]} argv 引数\n     * @return {String} インストールディレクトリ\n     */\n    static getPackageDirectory(argv) {\n        const execDir = path.dirname(argv[1]);\n        return path.join(execDir, \"..\");\n    }\n    /**\n     * CLI option を ICommandLineOptions に変換\n     *\n     * @param  {Object} commander parse 済み comannder インスタンス\n     * @return {ICommandLineOptions} option オブジェクト\n     */\n    static toCommandLineOptions(command) {\n        return {\n            force: !!command.force,\n            targetDir: command.targetdir,\n            config: command.config,\n            verbose: !!command.verbose,\n            silent: !!command.silent,\n            minify: command.minify,\n        };\n    }\n    /**\n     * ヘルプ表示して終了\n     */\n    static showHelp() {\n        const inform = (text) => {\n            return chalk.green(text);\n        };\n        commander.outputHelp(inform);\n        process.exit(1);\n    }\n}\nexports.CommandParser = CommandParser;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"commander\");\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst inquirer = __webpack_require__(2);\nconst cdp_lib_1 = __webpack_require__(0);\nconst prompt_base_1 = __webpack_require__(1);\nconst default_config_1 = __webpack_require__(4);\nconst $ = cdp_lib_1.Utils.$;\nconst chalk = cdp_lib_1.Utils.chalk;\nconst semverRegex = cdp_lib_1.Utils.semverRegex;\nconst libConfig = default_config_1.default.library;\n/**\n * @class PromptLibrary\n * @brief ライブラリモジュール用 Inquire クラス\n */\nclass PromptLibrary extends prompt_base_1.PromptBase {\n    ///////////////////////////////////////////////////////////////////////\n    // imprements abstruct methods\n    /**\n     * プロジェクト設定項目の取得\n     */\n    get questions() {\n        return [\n            // project common settnigs (IProjectConfigration)\n            {\n                type: \"input\",\n                name: \"projectName\",\n                message: this.lang.prompt.common.projectName.message,\n                default: this.answers.projectName || \"cool-project-name\",\n                validate: (value) => {\n                    if (!/^[a-zA-Z0-9/@._-]+$/.test(value)) {\n                        return this.lang.prompt.common.projectName.invalidMessage;\n                    }\n                    else {\n                        return true;\n                    }\n                },\n            },\n            {\n                type: \"input\",\n                name: \"version\",\n                message: this.lang.prompt.common.version.message,\n                default: this.answers.version || \"0.0.1\",\n                filter: (value) => {\n                    if (semverRegex().test(value)) {\n                        return semverRegex().exec(value)[0];\n                    }\n                    else {\n                        return value;\n                    }\n                },\n                validate: (value) => {\n                    if (semverRegex().test(value)) {\n                        return true;\n                    }\n                    else {\n                        return this.lang.prompt.common.version.invalidMessage;\n                    }\n                },\n            },\n            {\n                type: \"list\",\n                name: \"license\",\n                message: this.lang.prompt.common.license.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.license.choices.apache2,\n                        value: \"Apache-2.0\",\n                    },\n                    {\n                        name: this.lang.prompt.common.license.choices.mit,\n                        value: \"MIT\",\n                    },\n                    {\n                        name: this.lang.prompt.common.license.choices.proprietary,\n                        value: \"NONE\",\n                    }\n                ],\n                default: this.answers.license || \"NONE\",\n            },\n            // library settnigs (IBuildTargetConfigration)\n            {\n                type: \"list\",\n                name: \"env\",\n                message: this.lang.prompt.library.env.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.env.choices.browser,\n                        value: \"web\",\n                    },\n                    {\n                        name: this.lang.prompt.common.env.choices.node,\n                        value: \"node\",\n                    },\n                    new inquirer.Separator(),\n                    {\n                        name: this.lang.prompt.common.env.choices.electron + this.LIMITATION(),\n                        value: \"electron\",\n                    },\n                    {\n                        name: this.lang.prompt.common.env.choices.electronRenderer + this.LIMITATION(),\n                        value: \"electron-renderer\",\n                    }\n                ],\n                filter: (value) => {\n                    if (libConfig.ELECTRON_AVAILABLE) {\n                        return value;\n                    }\n                    else if (\"electron\" === value) {\n                        return \"node\";\n                    }\n                    else if (\"electron-renderer\" === value) {\n                        return \"web\";\n                    }\n                    else {\n                        return value;\n                    }\n                },\n                default: this.answers.env || \"web\",\n            },\n            // base structure\n            {\n                type: \"list\",\n                name: \"extraSettings\",\n                message: this.lang.prompt.common.extraSettings.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.extraSettings.choices.recommended,\n                        value: \"recommended\",\n                    },\n                    {\n                        name: this.lang.prompt.common.extraSettings.choices.custom,\n                        value: \"custom\",\n                    },\n                ],\n                default: this.answers.extraSettings || \"recommended\",\n            },\n            // library settnigs (custom: module)\n            {\n                type: \"list\",\n                name: \"module\",\n                message: this.lang.prompt.common.module.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.module.choices.none,\n                        value: \"none\",\n                    },\n                    {\n                        name: this.lang.prompt.common.module.choices.commonjs,\n                        value: \"commonjs\",\n                    },\n                    {\n                        name: this.lang.prompt.common.module.choices.umd,\n                        value: \"umd\",\n                    },\n                ],\n                default: (\"amd\" !== this.answers.module) ? (this.answers.module || \"commonjs\") : \"commonjs\",\n                when: (answers) => {\n                    return \"custom\" === answers.extraSettings && /^(node|electron)$/i.test(answers.env);\n                },\n            },\n            {\n                type: \"list\",\n                name: \"module\",\n                message: this.lang.prompt.common.module.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.module.choices.none,\n                        value: \"none\",\n                    },\n                    {\n                        name: this.lang.prompt.common.module.choices.amd,\n                        value: \"amd\",\n                    },\n                    {\n                        name: this.lang.prompt.common.module.choices.umd,\n                        value: \"umd\",\n                    },\n                ],\n                default: (\"commonjs\" !== this.answers.module) ? (this.answers.module || \"amd\") : \"amd\",\n                when: (answers) => {\n                    return \"custom\" === answers.extraSettings && \"web\" === answers.env;\n                },\n            },\n            {\n                type: \"list\",\n                name: \"module\",\n                message: this.lang.prompt.common.module.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.module.choices.none,\n                        value: \"none\",\n                    },\n                    {\n                        name: this.lang.prompt.common.module.choices.commonjs,\n                        value: \"commonjs\",\n                    },\n                    {\n                        name: this.lang.prompt.common.module.choices.amd,\n                        value: \"amd\",\n                    },\n                    {\n                        name: this.lang.prompt.common.module.choices.umd,\n                        value: \"umd\",\n                    },\n                ],\n                default: this.answers.module || \"commonjs\",\n                when: (answers) => {\n                    return \"custom\" === answers.extraSettings && \"electron-renderer\" === answers.env;\n                },\n            },\n            // library settnigs (custom: es)\n            {\n                type: \"list\",\n                name: \"es\",\n                message: this.lang.prompt.common.es.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.es.choices.es5,\n                        value: \"es5\",\n                    },\n                    {\n                        name: this.lang.prompt.common.es.choices.es2015,\n                        value: \"es2015\",\n                    },\n                ],\n                default: this.answers.es || (\"web\" === this.answers.env ? \"es5\" : \"es2015\"),\n                when: (answers) => {\n                    return \"custom\" === answers.extraSettings;\n                },\n            },\n        ];\n    }\n    /**\n     * プロジェクト設定の確認\n     *\n     * @param  {IAnswerSchema} answers 回答結果\n     * @return {IProjectConfigration} 設定値を返却\n     */\n    displaySettingsByAnswers(answers) {\n        const config = (() => {\n            switch (answers.env) {\n                case \"web\":\n                    return $.extend({}, libConfig.browser, answers);\n                case \"node\":\n                    return $.extend({}, libConfig.node, answers);\n                case \"electron\":\n                    return $.extend({}, libConfig.electron, answers);\n                case \"electron-renderer\":\n                    return $.extend({}, libConfig.electron, answers);\n                default:\n                    console.error(chalk.red(\"unsupported target: \" + answers.env));\n                    process.exit(1);\n            }\n        })();\n        const items = [\n            { name: \"extraSettings\", recommend: false },\n            { name: \"projectName\", recommend: false },\n            { name: \"version\", recommend: false },\n            { name: \"license\", recommend: false },\n            { name: \"env\", recommend: false },\n            { name: \"module\", recommend: true },\n            { name: \"es\", recommend: true },\n        ];\n        try {\n            items.forEach((item) => {\n                const color = (item.recommend && \"recommended\" === answers.extraSettings) ? \"yellow\" : undefined;\n                console.log(this.config2description(config, item.name, color));\n            });\n        }\n        catch (error) {\n            console.error(chalk.red(\"error: \" + JSON.stringify(error, null, 4)));\n            process.exit(1);\n        }\n        return config;\n    }\n    ///////////////////////////////////////////////////////////////////////\n    // private methods:\n    /**\n     * electron が有効出ない場合の補足文字を取得\n     */\n    LIMITATION() {\n        return libConfig.ELECTRON_AVAILABLE ? \"\" : \" \" + this.lang.prompt.common.stilNotAvailable;\n    }\n}\nexports.PromptLibrary = PromptLibrary;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst inquirer = __webpack_require__(2);\nconst cdp_lib_1 = __webpack_require__(0);\nconst prompt_base_1 = __webpack_require__(1);\nconst default_config_1 = __webpack_require__(4);\nconst $ = cdp_lib_1.Utils.$;\nconst _ = cdp_lib_1.Utils._;\nconst chalk = cdp_lib_1.Utils.chalk;\nconst semverRegex = cdp_lib_1.Utils.semverRegex;\nconst mobileConfig = default_config_1.default.mobile;\nconst EXTERNAL_DEFAULTS = (() => {\n    const defaults = [];\n    Object.keys(mobileConfig.browser.external)\n        .forEach((target) => {\n        if (mobileConfig.browser.external[target].regular) {\n            defaults.push(target);\n        }\n    });\n    return defaults;\n})();\n/**\n * @class PromptMobileApp\n * @brief モバイルアプリ用 Inquire クラス\n */\nclass PromptMobileApp extends prompt_base_1.PromptBase {\n    ///////////////////////////////////////////////////////////////////////\n    // imprements abstruct methods\n    /**\n     * プロジェクト設定項目の取得\n     */\n    get questions() {\n        const platforms_default = this.answers.platforms\n            ? this.answers.platforms.slice()\n            : mobileConfig.browser.platforms;\n        delete this.answers.platforms;\n        const projectStructure_default = this.answers.projectStructure\n            ? this.answers.projectStructure.slice()\n            : mobileConfig.browser.projectStructure;\n        delete this.answers.projectStructure;\n        const external_default = this.answers.external\n            ? this.answers.external.slice()\n            : EXTERNAL_DEFAULTS;\n        delete this.answers.external;\n        return [\n            // project common settnigs (IProjectConfigration)\n            {\n                type: \"input\",\n                name: \"appName\",\n                message: this.lang.prompt.mobile.appName.message,\n                default: this.answers.appName || \"Cool App Name\",\n                validate: (value) => {\n                    if (/^.*[(\\\\|/|:|*|?|\"|<|>||)].*$/.test(value)) {\n                        return this.lang.prompt.mobile.appName.invalidMessage;\n                    }\n                    else {\n                        return true;\n                    }\n                },\n            },\n            {\n                type: \"input\",\n                name: \"projectName\",\n                message: this.lang.prompt.common.projectName.message,\n                default: (answers) => {\n                    return _.trim(_.dasherize(answers.appName.toLowerCase()), \"-\");\n                },\n                validate: (value) => {\n                    if (!/^[a-zA-Z0-9_-]*$/.test(value)) {\n                        return this.lang.prompt.common.projectName.invalidMessage;\n                    }\n                    else {\n                        return true;\n                    }\n                },\n            },\n            {\n                type: \"input\",\n                name: \"appId\",\n                message: this.lang.prompt.mobile.appId.message,\n                default: this.answers.appId || \"org.cool.appname\",\n                filter: (value) => {\n                    return value.toLowerCase();\n                },\n            },\n            {\n                type: \"input\",\n                name: \"version\",\n                message: this.lang.prompt.common.version.message,\n                default: this.answers.version || \"0.0.1\",\n                filter: (value) => {\n                    if (semverRegex().test(value)) {\n                        return semverRegex().exec(value)[0];\n                    }\n                    else {\n                        return value;\n                    }\n                },\n                validate: (value) => {\n                    if (semverRegex().test(value)) {\n                        return true;\n                    }\n                    else {\n                        return this.lang.prompt.common.version.invalidMessage;\n                    }\n                },\n            },\n            {\n                type: \"list\",\n                name: \"license\",\n                message: this.lang.prompt.common.license.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.license.choices.apache2,\n                        value: \"Apache-2.0\",\n                    },\n                    {\n                        name: this.lang.prompt.common.license.choices.mit,\n                        value: \"MIT\",\n                    },\n                    {\n                        name: this.lang.prompt.common.license.choices.proprietary,\n                        value: \"NONE\",\n                    },\n                ],\n                default: this.answers.license || \"NONE\",\n            },\n            {\n                type: \"checkbox\",\n                name: \"platforms\",\n                message: this.lang.prompt.mobile.platforms.message,\n                choices: [\n                    {\n                        name: \"android\",\n                        checked: (0 <= platforms_default.indexOf(\"android\")),\n                    },\n                    {\n                        name: \"ios\",\n                        checked: (0 <= platforms_default.indexOf(\"ios\")),\n                    },\n                ],\n            },\n            {\n                type: \"list\",\n                name: \"extraSettings\",\n                message: this.lang.prompt.common.extraSettings.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.common.extraSettings.choices.recommended,\n                        value: \"recommended\",\n                    },\n                    {\n                        name: this.lang.prompt.common.extraSettings.choices.custom,\n                        value: \"custom\",\n                    },\n                ],\n                default: this.answers.extraSettings || \"recommended\",\n            },\n            {\n                type: \"checkbox\",\n                name: \"projectStructure\",\n                message: this.lang.prompt.mobile.projectStructure.message,\n                choices: [\n                    {\n                        name: this.lang.prompt.mobile.projectStructure.lib,\n                        value: \"lib\",\n                        checked: (0 <= projectStructure_default.indexOf(\"lib\")),\n                    },\n                    {\n                        name: this.lang.prompt.mobile.projectStructure.porting,\n                        value: \"porting\",\n                        checked: (0 <= projectStructure_default.indexOf(\"porting\")),\n                    },\n                ],\n                when: (answers) => {\n                    return \"custom\" === answers.extraSettings;\n                },\n            },\n            {\n                type: \"checkbox\",\n                name: \"external\",\n                message: this.lang.prompt.mobile.external.message,\n                paginated: false,\n                choices: [\n                    new inquirer.Separator(this.lang.prompt.mobile.external.separator.cordova),\n                    {\n                        name: this.lang.prompt.mobile.external.modules[\"cordova-plugin-cdp-nativebridge\"],\n                        value: \"cordova-plugin-cdp-nativebridge\",\n                        checked: (0 <= external_default.indexOf(\"cordova-plugin-cdp-nativebridge\")),\n                        disabled: (answers) => {\n                            if (!answers.platforms || answers.platforms.length <= 0) {\n                                return this.lang.prompt.mobile.external.noCordovaMessage;\n                            }\n                        },\n                    },\n                    {\n                        name: this.lang.prompt.mobile.external.modules[\"cordova-plugin-inappbrowser\"],\n                        value: \"cordova-plugin-inappbrowser\",\n                        checked: (0 <= external_default.indexOf(\"cordova-plugin-inappbrowser\")),\n                        disabled: (answers) => {\n                            if (!answers.platforms || answers.platforms.length <= 0) {\n                                return this.lang.prompt.mobile.external.noCordovaMessage;\n                            }\n                        },\n                    },\n                    {\n                        name: this.lang.prompt.mobile.external.modules[\"cordova-plugin-app-version\"],\n                        value: \"cordova-plugin-app-version\",\n                        checked: (0 <= external_default.indexOf(\"cordova-plugin-app-version\")),\n                        disabled: (answers) => {\n                            if (!answers.platforms || answers.platforms.length <= 0) {\n                                return this.lang.prompt.mobile.external.noCordovaMessage;\n                            }\n                        },\n                    },\n                    new inquirer.Separator(this.lang.prompt.mobile.external.separator.utils),\n                    /* tslint:disable:no-string-literal */\n                    {\n                        name: this.lang.prompt.mobile.external.modules[\"hogan.js\"],\n                        value: \"hogan.js\",\n                        checked: (0 <= external_default.indexOf(\"hogan.js\")),\n                    },\n                    {\n                        name: this.lang.prompt.mobile.external.modules[\"hammerjs\"],\n                        value: \"hammerjs\",\n                        checked: (0 <= external_default.indexOf(\"hammerjs\")),\n                    },\n                    {\n                        name: this.lang.prompt.mobile.external.modules[\"iscroll\"],\n                        value: \"iscroll\",\n                        checked: (0 <= external_default.indexOf(\"iscroll\")),\n                    },\n                    {\n                        name: this.lang.prompt.mobile.external.modules[\"flipsnap\"],\n                        value: \"flipsnap\",\n                        checked: (0 <= external_default.indexOf(\"flipsnap\")),\n                    },\n                ],\n                when: (answers) => {\n                    return \"custom\" === answers.extraSettings;\n                },\n            },\n        ];\n    }\n    /**\n     * プロジェクト設定の確認\n     *\n     * @param  {IAnswerSchema} answers 回答結果\n     * @return {IProjectConfigration} 設定値を返却\n     */\n    displaySettingsByAnswers(answers) {\n        const config = (() => {\n            const defaults = $.extend({}, mobileConfig.browser);\n            const lookup = defaults.external;\n            delete defaults.external;\n            const _config = $.extend({}, defaults, {\n                external: EXTERNAL_DEFAULTS,\n                dependencies: [],\n                devDependencies: [],\n                cordova_plugin: [],\n                resource_addon: [],\n            }, answers);\n            try {\n                const resolveDependencies = (moduleName, info) => {\n                    switch (info.acquisition) {\n                        case \"npm\":\n                            _config.dependencies.push({\n                                name: moduleName,\n                                alias: info.alias,\n                                globalExport: info.globalExport,\n                                venderName: info.venderName,\n                                fileName: info.fileName,\n                            });\n                            return true;\n                        case \"npm:dev\":\n                            _config.devDependencies.push({ name: moduleName });\n                            return true;\n                        case \"cordova\":\n                            if (0 < _config.platforms.length) {\n                                _config.cordova_plugin.push({ name: moduleName });\n                                return true;\n                            }\n                            else {\n                                return false;\n                            }\n                        case \"resource\":\n                            _config.resource_addon.push({\n                                name: moduleName,\n                                alias: info.alias,\n                                globalExport: info.globalExport,\n                                venderName: info.venderName,\n                                fileName: info.fileName,\n                            });\n                            return true;\n                        default:\n                            return false;\n                    }\n                };\n                _config.external.forEach((top) => {\n                    const info = lookup[top];\n                    const valid = resolveDependencies(top, info);\n                    if (valid && info.subset) {\n                        Object.keys(info.subset)\n                            .forEach((sub) => {\n                            resolveDependencies(sub, info.subset[sub]);\n                        });\n                    }\n                });\n            }\n            catch (error) {\n                console.error(chalk.red(\"error: \" + JSON.stringify(error, null, 4)));\n                process.exit(1);\n            }\n            delete _config.external;\n            return _config;\n        })();\n        const items = [\n            { name: \"extraSettings\", fixed: false },\n            { name: \"appName\", fixed: false },\n            { name: \"projectName\", fixed: false },\n            { name: \"appId\", fixed: false },\n            { name: \"version\", fixed: false },\n            { name: \"license\", fixed: false },\n            { name: \"module\", fixed: true },\n            { name: \"es\", fixed: true },\n        ];\n        try {\n            items.forEach((item) => {\n                const color = (item.fixed) ? \"yellow\" : undefined;\n                console.log(this.config2description(config, item.name, color));\n            });\n        }\n        catch (error) {\n            console.error(chalk.red(\"error: \" + JSON.stringify(error, null, 4)));\n            process.exit(1);\n        }\n        // platforms\n        const platformInfo = (0 < config.platforms.length)\n            ? config.platforms.join(\", \")\n            : this.lang.settings.mobile.platforms.none;\n        console.log(\"\\n\" + this.lang.settings.mobile.platforms.label + chalk.cyan(platformInfo));\n        const COLOR = (\"recommended\" === answers.extraSettings) ? \"yellow\" : \"cyan\";\n        // additional project structure\n        if (0 < config.projectStructure.length) {\n            const projectStructure = config.projectStructure.join(\", \");\n            console.log(\"\\n\" + this.lang.settings.mobile.projectStructure.label + chalk[COLOR](projectStructure));\n        }\n        // additional cordova plugin\n        if (0 < config.cordova_plugin.length) {\n            console.log(\"\\n\" + this.lang.settings.mobile.cordovaPlugins.label);\n            config.cordova_plugin.forEach((info) => {\n                console.log(\"    \" + chalk[COLOR](info.name));\n            });\n        }\n        // additional dependency\n        if (0 < config.dependencies.length) {\n            console.log(\"\\n\" + this.lang.settings.mobile.dependencies.label);\n            config.resource_addon.forEach((info) => {\n                console.log(\"    \" + chalk[COLOR](info.name));\n            });\n            config.dependencies.forEach((info) => {\n                console.log(\"    \" + chalk[COLOR](info.name));\n            });\n        }\n        return config;\n    }\n}\nexports.PromptMobileApp = PromptMobileApp;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/* tslint:disable:no-unused-variable no-unused-vars */\n/* eslint-disable no-unused-vars */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cdp_lib_1 = __webpack_require__(0);\nconst prompt_base_1 = __webpack_require__(1);\nconst chalk = cdp_lib_1.Utils.chalk;\n/**\n * @class PromptDesktopApp\n * @brief デスクトップアプリ用 Inquire クラス\n */\nclass PromptDesktopApp extends prompt_base_1.PromptBase {\n    ///////////////////////////////////////////////////////////////////////\n    // public methods\n    /**\n     * エントリ\n     */\n    prompting(cmdInfo) {\n        return new Promise((resolve, reject) => {\n            reject(\"desktop app prompting, under construction.\");\n        });\n    }\n    ///////////////////////////////////////////////////////////////////////\n    // imprements abstruct methods\n    /**\n     * プロジェクト設定項目の取得\n     */\n    get questions() {\n        // TODO:\n        return [];\n    }\n    /**\n     * プロジェクト設定の確認\n     *\n     * @param  {IAnswerSchema} answers 回答結果\n     * @return {IProjectConfigration} 設定値を返却\n     */\n    displaySettingsByAnswers(answers) {\n        // TODO: show\n        return null;\n    }\n}\nexports.PromptDesktopApp = PromptDesktopApp;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/* tslint:disable:no-unused-variable no-unused-vars */\n/* eslint-disable no-unused-vars */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cdp_lib_1 = __webpack_require__(0);\nconst prompt_base_1 = __webpack_require__(1);\nconst chalk = cdp_lib_1.Utils.chalk;\n/**\n * @class PromptWebApp\n * @brief ウェブアプリ用 Inquire クラス\n */\nclass PromptWebApp extends prompt_base_1.PromptBase {\n    ///////////////////////////////////////////////////////////////////////\n    // public methods\n    /**\n     * エントリ\n     */\n    prompting(cmdInfo) {\n        return new Promise((resolve, reject) => {\n            reject(\"web app prompting, under construction.\");\n        });\n    }\n    ///////////////////////////////////////////////////////////////////////\n    // imprements abstruct methods\n    /**\n     * プロジェクト設定項目の取得\n     */\n    get questions() {\n        // TODO:\n        return [];\n    }\n    /**\n     * プロジェクト設定の確認\n     *\n     * @param  {IAnswerSchema} answers 回答結果\n     * @return {IProjectConfigration} 設定値を返却\n     */\n    displaySettingsByAnswers(answers) {\n        // TODO: show\n        return null;\n    }\n}\nexports.PromptWebApp = PromptWebApp;\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}